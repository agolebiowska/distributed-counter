## First stage
FROM golang:alpine AS builder

ENV CGO_ENABLED 0

WORKDIR /src
COPY . .

# The -gcflags "all=-N -l" flag helps us get a better debug experience
RUN go build -gcflags "all=-N -l" -o server

RUN apk add --no-cache git
# Get debugger
RUN go get github.com/go-delve/delve/cmd/dlv

## Second stage
# in Dockerfile.dev keep the golang
# to be able to run go test ./... in the container
FROM golang

COPY --from=builder /src/server /
COPY --from=builder /go/bin/dlv /

# Run debugger
CMD ["/dlv", "--listen=:40000", "--headless=true", "--api-version=2", "exec", "/server"]